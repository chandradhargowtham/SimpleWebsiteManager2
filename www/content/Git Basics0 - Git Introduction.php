<?php include "../header/header.php"; ?><html><body><div class="container"><br><h1>0 - Git Introduction</h1><br><br><b>Git:</b><br>Git is a distributed version control system used to manage software projects. We can manage projects by tracking the creation,removal or modification of files. Git was created by <i>Linus Torvalds</i> in 2005. <br><br><b> What is a distributed Version Control System? </b><br>According to Wikipedia, Version Control is a class of systems responsible for managing changes to computer programs, documents, large web sites, or other collections of information - It keeps track of all changes in a project like adding new files or modifying the existing ones and lets us access these changes.<br><br>There are two types of version control - Distributed and Centralized version control.<br><br><b>Distributed Version Control : </b>Distributed Version Control Systems displays its full commit history on every developer's computer. In a Distributed Version Control System, programmers can have multiple copies of files in parallel.<br><br><b>Centralized Version Control : </b>Centralized Version Control System follows a Server-Client approach where only one centralized server exists which has the entire code base and programmers(clients) will push their changes to this server. <br><br><b>Why Git? </b><br>Consider a project with 3 files A,B,C. All the files are needed for the project to compile and run successfully. Now consider these scenarios:<br><br><b>Scenario 1:  </b>There is only one programmer who handles this project. <br>                         a. He can make changes which might break the program. <br>                         b. His computer might die and he can lose all the files.<br>                         c. He wants to make two versions of the same program with minor differences but he doesn't want to maintain two code bases.<br><br><b>Scenario 2:  </b>There are 2 or more programmers who are working on this project. <br>                         a. Programmer 1 can make changes on the File A while programmer 2 can work on file C.<br>                         b. Programmer 1 and programmer 2 can work on the same file A without waiting for the other to save their changes. <br>                         c. Programmer 1 can work on a new file C keeping the files A,B the same whereas programmer 2 can work on a different set of files A,B,C.<br><br>All these scenarios can be dealt with in a less stressful way by using GIT. <br><img src="../content/images/2020-12-25git.png" width="921" height="450"><br><br><br>The next articles cover the basics like creating repositories and making commits.</div></body></html><br><br><?php include "../footer/footer.php"; ?>